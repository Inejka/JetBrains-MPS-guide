package CornLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptCornflowerMeasurement = createDescriptorForCornflowerMeasurement();
  /*package*/ final ConceptDescriptor myConceptResearch = createDescriptorForResearch();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptCornflowerMeasurement, myConceptResearch);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.CornflowerMeasurement:
        return myConceptCornflowerMeasurement;
      case LanguageConceptSwitch.Research:
        return myConceptResearch;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForCornflowerMeasurement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("CornLanguage", "CornflowerMeasurement", 0xec3faa27c71742bcL, 0x94cf2c9303646a1cL, 0x3da93f56aca898cfL);
    b.class_(false, false, false);
    b.origin("r:92ed9d50-c8dd-4c11-a2af-30f3767b2440(CornLanguage.structure)/4443152148874172623");
    b.version(3);
    b.property("stemLength", 0x3da93f56aca898d0L).type(PrimitiveTypeId.INTEGER).origin("4443152148874172624").done();
    b.property("blueDepth", 0x3da93f56aca898d2L).type(PrimitiveTypeId.INTEGER).origin("4443152148874172626").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForResearch() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("CornLanguage", "Research", 0xec3faa27c71742bcL, 0x94cf2c9303646a1cL, 0x3da93f56aca8b384L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0x4caf0310491e41f5L, 0x8a9b2006b3a94898L, 0x40c1a7cb987d20d5L);
    b.origin("r:92ed9d50-c8dd-4c11-a2af-30f3767b2440(CornLanguage.structure)/4443152148874179460");
    b.version(3);
    b.aggregate("measurements", 0x3da93f56aca8b387L).target(0xec3faa27c71742bcL, 0x94cf2c9303646a1cL, 0x3da93f56aca898cfL).optional(true).ordered(true).multiple(true).origin("4443152148874179463").done();
    return b.create();
  }
}
